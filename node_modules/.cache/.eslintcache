[{"/Users/a260/dev/myProject/dashboard/src/index.js":"1","/Users/a260/dev/myProject/dashboard/src/App.js":"2","/Users/a260/dev/myProject/dashboard/src/reportWebVitals.js":"3","/Users/a260/dev/myProject/dashboard/src/home/Dashboard.js":"4","/Users/a260/dev/myProject/dashboard/src/components/ToDoPart.js":"5","/Users/a260/dev/myProject/dashboard/src/components/GreetingPart.js":"6","/Users/a260/dev/myProject/dashboard/src/components/ThirdPart.js":"7"},{"size":535,"mtime":1688460300259,"results":"8","hashOfConfig":"9"},{"size":189,"mtime":1688460300253,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1688460300259,"results":"11","hashOfConfig":"9"},{"size":433,"mtime":1688542723329,"results":"12","hashOfConfig":"9"},{"size":7024,"mtime":1688637263817,"results":"13","hashOfConfig":"9"},{"size":4067,"mtime":1688542630987,"results":"14","hashOfConfig":"9"},{"size":1254,"mtime":1688536710759,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"10tsc17",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"19"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"19"},"/Users/a260/dev/myProject/dashboard/src/index.js",[],[],[],"/Users/a260/dev/myProject/dashboard/src/App.js",[],[],"/Users/a260/dev/myProject/dashboard/src/reportWebVitals.js",[],[],"/Users/a260/dev/myProject/dashboard/src/home/Dashboard.js",["41"],[],"import styled, { css } from \"styled-components\";\nimport GreetingPart from \"../components/GreetingPart\";\nimport ToDoPart from \"../components/ToDoPart\";\nimport ThirdPart from \"../components/ThirdPart\";\n\nconst Wrap = styled.div`\n  display: flex;\n  height: 100vh;\n  width: 100vw;\n`;\n\nfunction Dashboard() {\n  return (\n    <Wrap>\n      <GreetingPart />\n      <ToDoPart />\n      <ThirdPart />\n    </Wrap>\n  );\n}\n\nexport default Dashboard;\n","/Users/a260/dev/myProject/dashboard/src/components/ToDoPart.js",["42","43"],[],"/Users/a260/dev/myProject/dashboard/src/components/GreetingPart.js",["44"],[],"import { useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst AlignCenter = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst HorizontalAlign = css`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst MainContent = styled.div`\n  box-sizing: border-box; \n  height: 100%;\n  /* padding: 30px; */\n  width: 33.3%;\n  border-right: 1px solid black;\n`;\n\nconst VerticalDivide = styled.div`\n  height: 33.3%;\n  width: 100%;\n`;\n\nconst UserInputArea = styled.div`\n  ${HorizontalAlign}\n  border-bottom: 1px solid black;\n  box-sizing: border-box;\n  height: 50px;\n\n  /* padding: 10px; */\n`;\n\nconst InputArea = styled.input`\n  ${ AlignCenter }\n  border-width: 0px;\n  font-size: 18px;\n  height: 100%;\n  width: 70%;\n  padding: 0px 10px;\n  margin: 0px;\n\n  ::placeholder {\n    font-size: 18px;\n  }\n`;\n\nconst InputButton = styled.div`\n  ${ AlignCenter }\n  border-left: 1px solid black;\n  /* border-radius: 10px; */\n  font-size: 18px;\n  height: 100%;\n  min-width: 60px;\n  width: 30%;\n\n  &:hover {\n    background-color: black;\n    color: white;\n  };\n`;\n\nconst UserNameArea = styled.div`\n  border-bottom: 1px solid black;\n  box-sizing: border-box;\n  font-size: 22px;\n  height: 100px;\n  padding: 20px 10px;\n`;\n\n\nfunction GreetingPart() {\n    // const [time, setTime] = useState(new Date());\n    const [currWeather, setCurrWeather] = useState(null);\n    const [userName, setUserName] = useState('');\n    const [user, setUser] = useState('');\n  \n    const getCurrentLocation = () => {\n      // 현재 위치 가져오기\n      navigator.geolocation.getCurrentPosition((position) => {\n        let latitude = position.coords.latitude;\n        let longitude = position.coords.longitude;\n  \n        getWeatherByCurrentLocation(latitude, longitude);\n      });\n    };\n  \n     // 현재 위치 날씨 API 가져오기\n     const getWeatherByCurrentLocation = async (latitude, longitude) => {\n      let WEATHER_API_KEY = '739cddaed6d840ce7ff865f1c8296393';\n      let WEATHER_API_URL = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&exclude={part}&appid=${WEATHER_API_KEY}&units=metric&lang=kr`;\n      let response = await fetch(WEATHER_API_URL);\n      let data = await response.json();\n      setCurrWeather(data.current);\n    };\n  \n    useEffect(() => {\n      getCurrentLocation();\n      getWeatherByCurrentLocation();\n    }, []);\n  \n    // useEffect(() => {\n    //   const id = setInterval(() => {\n    //     setTime(new Date());\n    //   }, 1000);\n  \n    //   return (() => \n    //     clearInterval(id) // 불필요한 작업 방지\n    //   ); \n    // }, []);\n  \n    const getUserName = (e) => {\n      setUserName(e.target.value);\n    };\n  \n    const addUserName = (e) => {\n      e.preventDefault();\n\n      if(userName === '') {\n          alert('입력창이 비었네요!');\n      } else {\n        setUser(userName);\n        setUserName('');\n      }\n    };\n\n    return (\n      <MainContent>\n        <VerticalDivide>\n        {\n          user !== '' ? \n            <UserNameArea>{ user }님 <br />안녕하세요</UserNameArea> : \n            <UserInputArea>\n              <InputArea \n                onChange={ getUserName } \n                placeholder=\"이름을 입력해주세요\" \n                value={ userName } \n              />\n              <InputButton onClick={ addUserName }>저장</InputButton>\n            </UserInputArea>\n        }\n        </VerticalDivide>\n        {/* <VerticalDivide>\n          오늘은 { time.toLocaleDateString() }\n          <br />\n          현재시간은 { time.toLocaleTimeString() } 입니다.\n        </VerticalDivide> */}\n        <VerticalDivide>\n          { \n            currWeather === null || currWeather === undefined ? \n            <div>현재 날씨를 가져오고 있어요!</div> : \n            <div>현재 기온은 { currWeather?.temp }℃로 { currWeather?.weather[0].description } 이에요</div>\n          }\n        </VerticalDivide>\n      </MainContent>\n     \n    );\n\n}\n\nexport default GreetingPart;","/Users/a260/dev/myProject/dashboard/src/components/ThirdPart.js",["45","46"],[],"import { useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst AlignCenter = css`\n    align-items: center;\n    display: flex;\n    justify-content: center;\n`;\n\nconst HorizontalAlign = css`\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n`;\n\nconst MainContent = styled.div`\n    box-sizing: border-box; \n    height: 100%;\n    /* padding: 40px; */\n    width: 33.3%;\n`;\n\nconst ClockBox = styled.div`\n    align-items: center;\n    /* background-color: black; */\n    border-bottom: 1px solid black;\n    box-sizing: border-box;\n    /* color: white; */\n    display: flex;\n    font-size: 18px;\n    height: 50px;\n    justify-content: flex-end;\n    padding: 10px;\n    width: 100%;\n`;\n\nfunction ThirdPart() {\n    const [time, setTime] = useState(new Date());\n\n    useEffect(() => {\n        const id = setInterval(() => {\n            setTime(new Date());\n        }, 1000);\n\n        return (() => \n            clearInterval(id) // 불필요한 작업 방지\n        ); \n    }, []);\n\n    return (\n        <MainContent>\n            <ClockBox>\n                { time.toLocaleDateString() } { time.toLocaleTimeString()}\n            </ClockBox>\n        </MainContent> \n    );\n};\n\nexport default ThirdPart;",{"ruleId":"47","severity":1,"message":"48","line":1,"column":18,"nodeType":"49","messageId":"50","endLine":1,"endColumn":21},{"ruleId":"47","severity":1,"message":"51","line":25,"column":7,"nodeType":"49","messageId":"50","endLine":25,"endColumn":23},{"ruleId":"47","severity":1,"message":"52","line":156,"column":22,"nodeType":"49","messageId":"50","endLine":156,"endColumn":35},{"ruleId":"53","severity":1,"message":"54","line":104,"column":8,"nodeType":"55","endLine":104,"endColumn":10,"suggestions":"56"},{"ruleId":"47","severity":1,"message":"57","line":4,"column":7,"nodeType":"49","messageId":"50","endLine":4,"endColumn":18},{"ruleId":"47","severity":1,"message":"58","line":10,"column":7,"nodeType":"49","messageId":"50","endLine":10,"endColumn":22},"no-unused-vars","'css' is defined but never used.","Identifier","unusedVar","'ContentTitleArea' is assigned a value but never used.","'setEditStates' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCurrentLocation'. Either include it or remove the dependency array.","ArrayExpression",["59"],"'AlignCenter' is assigned a value but never used.","'HorizontalAlign' is assigned a value but never used.",{"desc":"60","fix":"61"},"Update the dependencies array to be: [getCurrentLocation]",{"range":"62","text":"63"},[2392,2394],"[getCurrentLocation]"]