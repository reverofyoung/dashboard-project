{"ast":null,"code":"var _jsxFileName = \"/Users/a260/dev/myProject/dashboard/src/components/GreetingPart.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlignCenter = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst MainContent = styled.div`\n  box-sizing: border-box; \n  height: 100%;\n  padding: 40px;\n  width: 33.3%;\n  border-right: 1px solid black;\n`;\n_c = MainContent;\nconst InnerContentBox = styled.div`\n  font-size: 28px;\n  height: 33.3%;\n  width: 100%;\n`;\n_c2 = InnerContentBox;\nconst HorizontalAlign = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n`;\n_c3 = HorizontalAlign;\nconst InputArea = styled.input`\n  border-width: 0px 0px 1px 0px;\n  font-size: 26px;\n  height: 60px;\n  width: 70%;\n`;\n_c4 = InputArea;\nconst InputButton = styled.div`\n  ${AlignCenter}\n  border: 1px solid black;\n  border-radius: 10px;\n  font-size: 22px;\n  height: 30px;\n  width: 20%;\n  min-width: 60px;\n\n  &:hover {\n    background-color: black;\n    color: white;\n  };\n`;\n_c5 = InputButton;\nconst UserNameArea = styled.div`\n  display: userName !== '' ? flex : none;\n  font-size: 30px;\n`;\n_c6 = UserNameArea;\nfunction GreetingPart() {\n  _s();\n  const [time, setTime] = useState(new Date());\n  const [currWeather, setCurrWeather] = useState(null);\n  const [userName, setUserName] = useState('');\n  const [user, setUser] = useState('');\n  const getCurrentLocation = () => {\n    // 현재 위치 가져오기\n    navigator.geolocation.getCurrentPosition(position => {\n      let latitude = position.coords.latitude;\n      let longitude = position.coords.longitude;\n      getWeatherByCurrentLocation(latitude, longitude);\n    });\n  };\n\n  // 현재 위치 날씨 API 가져오기\n  const getWeatherByCurrentLocation = async (latitude, longitude) => {\n    let WEATHER_API_KEY = '739cddaed6d840ce7ff865f1c8296393';\n    let WEATHER_API_URL = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&exclude={part}&appid=${WEATHER_API_KEY}&units=metric&lang=kr`;\n    let response = await fetch(WEATHER_API_URL);\n    let data = await response.json();\n    setCurrWeather(data.current);\n  };\n  useEffect(() => {\n    getCurrentLocation();\n    getWeatherByCurrentLocation();\n  }, []);\n  useEffect(() => {\n    const id = setInterval(() => {\n      setTime(new Date());\n    }, 1000);\n    return () => clearInterval(id) // 불필요한 작업 방지\n    ;\n  }, []);\n  const getUserName = e => {\n    setUserName(e.target.value);\n  };\n  const submitUserName = e => {\n    e.preventDefault();\n    if (userName === '') {\n      alert('입력창이 비었네요!');\n    } else {\n      setUser(userName);\n      setUserName('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MainContent, {\n    children: [/*#__PURE__*/_jsxDEV(InnerContentBox, {\n      children: user !== '' ? /*#__PURE__*/_jsxDEV(HorizontalAlign, {\n        children: /*#__PURE__*/_jsxDEV(UserNameArea, {\n          children: [user, \"\\uB2D8 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 37\n          }, this), \"\\uC548\\uB155\\uD558\\uC138\\uC694!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(HorizontalAlign, {\n        children: [/*#__PURE__*/_jsxDEV(InputArea, {\n          onChange: getUserName,\n          placeholder: \"\\uC774\\uB984\",\n          value: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputButton, {\n          onClick: submitUserName,\n          children: \"\\uC800\\uC7A5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(InnerContentBox, {\n      children: currWeather === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uD604\\uC7AC \\uB0A0\\uC528\\uB97C \\uAC00\\uC838\\uC624\\uACE0 \\uC788\\uC5B4\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\uD604\\uC7AC \\uAE30\\uC628\\uC740 \", currWeather === null || currWeather === void 0 ? void 0 : currWeather.temp, \"\\u2103\\uB85C \", currWeather === null || currWeather === void 0 ? void 0 : currWeather.weather[0].description, \" \\uC774\\uC5D0\\uC694\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 7\n  }, this);\n}\n_s(GreetingPart, \"j7rt83BXm3LXgbAOeZo4ypSnJi8=\");\n_c7 = GreetingPart;\nexport default GreetingPart;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"MainContent\");\n$RefreshReg$(_c2, \"InnerContentBox\");\n$RefreshReg$(_c3, \"HorizontalAlign\");\n$RefreshReg$(_c4, \"InputArea\");\n$RefreshReg$(_c5, \"InputButton\");\n$RefreshReg$(_c6, \"UserNameArea\");\n$RefreshReg$(_c7, \"GreetingPart\");","map":{"version":3,"names":["useEffect","useState","styled","css","jsxDEV","_jsxDEV","AlignCenter","MainContent","div","_c","InnerContentBox","_c2","HorizontalAlign","_c3","InputArea","input","_c4","InputButton","_c5","UserNameArea","_c6","GreetingPart","_s","time","setTime","Date","currWeather","setCurrWeather","userName","setUserName","user","setUser","getCurrentLocation","navigator","geolocation","getCurrentPosition","position","latitude","coords","longitude","getWeatherByCurrentLocation","WEATHER_API_KEY","WEATHER_API_URL","response","fetch","data","json","current","id","setInterval","clearInterval","getUserName","e","target","value","submitUserName","preventDefault","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","onClick","temp","weather","description","_c7","$RefreshReg$"],"sources":["/Users/a260/dev/myProject/dashboard/src/components/GreetingPart.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\nconst AlignCenter = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst MainContent = styled.div`\n  box-sizing: border-box; \n  height: 100%;\n  padding: 40px;\n  width: 33.3%;\n  border-right: 1px solid black;\n`;\n\nconst InnerContentBox = styled.div`\n  font-size: 28px;\n  height: 33.3%;\n  width: 100%;\n`;\n\nconst HorizontalAlign = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst InputArea = styled.input`\n  border-width: 0px 0px 1px 0px;\n  font-size: 26px;\n  height: 60px;\n  width: 70%;\n`;\n\nconst InputButton = styled.div`\n  ${ AlignCenter }\n  border: 1px solid black;\n  border-radius: 10px;\n  font-size: 22px;\n  height: 30px;\n  width: 20%;\n  min-width: 60px;\n\n  &:hover {\n    background-color: black;\n    color: white;\n  };\n`;\n\nconst UserNameArea = styled.div`\n  display: userName !== '' ? flex : none;\n  font-size: 30px;\n`;\n\nfunction GreetingPart() {\n    const [time, setTime] = useState(new Date());\n    const [currWeather, setCurrWeather] = useState(null);\n    const [userName, setUserName] = useState('');\n    const [user, setUser] = useState('');\n  \n    const getCurrentLocation = () => {\n      // 현재 위치 가져오기\n      navigator.geolocation.getCurrentPosition((position) => {\n        let latitude = position.coords.latitude;\n        let longitude = position.coords.longitude;\n  \n        getWeatherByCurrentLocation(latitude, longitude);\n      });\n    };\n  \n     // 현재 위치 날씨 API 가져오기\n     const getWeatherByCurrentLocation = async (latitude, longitude) => {\n      let WEATHER_API_KEY = '739cddaed6d840ce7ff865f1c8296393';\n      let WEATHER_API_URL = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&exclude={part}&appid=${WEATHER_API_KEY}&units=metric&lang=kr`;\n      let response = await fetch(WEATHER_API_URL);\n      let data = await response.json();\n      setCurrWeather(data.current);\n    };\n  \n    useEffect(() => {\n      getCurrentLocation();\n      getWeatherByCurrentLocation();\n        \n    }, []);\n  \n    useEffect(() => {\n      const id = setInterval(() => {\n        setTime(new Date());\n      }, 1000);\n  \n      return (() => \n        clearInterval(id) // 불필요한 작업 방지\n      ); \n    }, []);\n  \n    const getUserName = (e) => {\n      setUserName(e.target.value);\n    };\n  \n    const submitUserName = (e) => {\n      e.preventDefault();\n      if(userName === '') {\n          alert('입력창이 비었네요!');\n      } else {\n        setUser(userName);\n        setUserName('');\n      }\n    };\n\n    return (\n      <MainContent>\n        <InnerContentBox>\n        {\n          user !== '' ? \n          <HorizontalAlign>\n            <UserNameArea>{ user }님 <br />안녕하세요!</UserNameArea>\n          </HorizontalAlign> : \n          <HorizontalAlign>\n            <InputArea \n              onChange={ getUserName } \n              placeholder=\"이름\" \n              value={ userName } \n            />\n            <InputButton onClick={ submitUserName }>저장</InputButton>\n          </HorizontalAlign>\n        }\n        </InnerContentBox>\n        {/* <InnerContentBox>\n          오늘은 { time.toLocaleDateString() }\n          <br />\n          현재시간은 { time.toLocaleTimeString() } 입니다.\n        </InnerContentBox> */}\n        <InnerContentBox>\n          {/* 현재 날씨는 { currWeather?.temp }℃로 { currWeather?.weather[0].description } 이에요 */}\n          { \n            currWeather === null ? \n            <div>현재 날씨를 가져오고 있어요!</div> : \n            <div>현재 기온은 { currWeather?.temp }℃로 { currWeather?.weather[0].description } 이에요</div>\n          }\n        </InnerContentBox>\n      </MainContent>\n     \n    );\n\n}\n\nexport default GreetingPart;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}